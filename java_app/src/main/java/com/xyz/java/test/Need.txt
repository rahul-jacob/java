Setup a spring boot project 
Build Tool: Gradle 
Logger: Log4J2 coupled MDC/ NDC


Unit Test: JUnit along with standard mockers. 

Others: Lombok

https://google.github.io/styleguide/javaguide.html
https://github.com/HPI-Information-Systems/Metanome/wiki/Installing-the-google-styleguide-settings-in-intellij-and-eclipse

Lombok especially 
Refer below for lombok. Its cake walk especially for young blood like you 
https://howtodoinjava.com/automation/lombok-eclipse-installation-examples/



nope 
its nested or mapped diagnostic context 
Concept is we log things but we loose track for which request 
With this you can setup the context and that context will be available in any method

So we can write filter and assign request id to each request so that request id will be available in any of the method 
So while loggin we can use this request id. 
so it is easier to corelate logged data 
Ok so one more item to brush up. ->>


dependencies {
    
    compile("org.springframework.boot:spring-boot-starter-web")
    
    //Log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
  	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
        
    //Swagger
    compile(group: 'io.springfox', name: 'springfox-swagger2', version:'2.4.0')
    compile(group: 'io.springfox', name: 'springfox-swagger-ui', version:'2.4.0') 
    
    //Springboot Actuator
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator') 
    
    //Code Quality - pmd, checkstyle and findbugs
    compile (group: 'net.sourceforge.pmd', name: 'pmd-core', version: '5.4.1')
    compile (group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1')
    compile (group: 'com.puppycrawl.tools', name: 'checkstyle', version: '7.6.1')
    
    compile(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.8.8')
    
    // Encrypt configuration parameters
    compile(group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '1.15') 
    
    // JUnit and Mockito
    testCompile("junit:junit")
    testCompile("org.mockito:mockito-core")
}
 